name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  fetch-cyz2json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download latest cyz2json release
        uses: robinraju/release-downloader@v1.11
        with:
          repository: "ecotaxa/cyz2json"
          latest: true
          fileName: "*"
          out-file-path: "downloads"
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: cyz2json-binaries
          path: downloads/*

  build-packages:
    needs: fetch-cyz2json
    strategy:
      matrix:
        include:
          - platform: windows
            platform_tag: win_amd64
          - platform: ubuntu
            platform_tag: linux_x86_64
          - platform: macos
            platform_tag: macosx_10_9_x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8'  # Specify exact version
      
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: cyz2json-binaries
          path: downloads

      - name: Prepare platform binary
        run: |
          mkdir -p src/cytosense_to_ecotaxa_pipeline/bin
          unzip -o "downloads/cyz2json-${{ matrix.platform }}-latest.zip" -d src/cytosense_to_ecotaxa_pipeline/bin/
          if [ "${{ matrix.platform }}" = "windows" ]; then
            mv src/cytosense_to_ecotaxa_pipeline/bin/publish/cyz2Json.exe src/cytosense_to_ecotaxa_pipeline/bin/cyz2json.exe
          else
            mv src/cytosense_to_ecotaxa_pipeline/bin/publish/cyz2Json src/cytosense_to_ecotaxa_pipeline/bin/cyz2json
          fi
          chmod +x src/cytosense_to_ecotaxa_pipeline/bin/cyz2json*

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build wheel setuptools setuptools-scm

      - name: Build package
        env:
          PLATFORM_TAG: ${{ matrix.platform_tag }}
        run: |
          python -m build --wheel
          # Rename wheel with correct platform tag
          for whl in dist/*.whl; do
            new_name=$(echo $whl | sed "s/-any.whl/-${PLATFORM_TAG}.whl/")
            mv "$whl" "$new_name"
          done

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}